
@inproceedings{sunarto_systematic_2023,
	location = {Malang, Indonesia},
	title = {A Systematic Review of {WebAssembly} {VS} Javascript Performance Comparison},
	isbn = {9798350326093},
	url = {https://ieeexplore.ieee.org/document/10277917/},
	doi = {10.1109/ICIMTech59029.2023.10277917},
	abstract = {Web Assembly is one of brand-new programming languages on the web, it is equipped with complex binary format features so that it is more sophisticated and fast to load. In this paper, we collect material to compare quality performance of {WASM} and {JS} in various aspects (Runtime, Energy, Memory Usage). The performance hypothesis between {WASM} {VS} {JS} is depends on the type of web application you want to build. If the application requires very high performance and requires processing large data, then {WASM} may be a better choice. However, if the app is more focused on user interaction and view manipulation then {JS} may be a better fit. But after the authors do some systematic review of {WASM} and {JS} performance comparison, the authors conclude that {WASM} win in light application because it’s faster and use less energy, but for heavy application, the authors conclude that {JS} is more convenient because it’s significantly less memory needed than {WASM}, also it’s unexpectedly more faster than {WASM}.},
	eventtitle = {2023 International Conference on Information Management and Technology ({ICIMTech})},
	pages = {241--246},
	booktitle = {2023 International Conference on Information Management and Technology ({ICIMTech})},
	publisher = {{IEEE}},
	author = {Sunarto, Joshua Wenata and Quincy, Angelina and Maheswari, Fakhira Shafa and Hafizh, Quesynovich Denis Al and Tjandrasubrata, Melanie Gabriela and Widianto, Mochammad Haldi},
	urldate = {2024-02-17},
	date = {2023-08-24},
	langid = {english},
	keywords = {noreview, wasm},
	file = {Sunarto et al. - 2023 - A Systematic Review of WebAssembly VS Javascript P.pdf:files/31/Sunarto et al. - 2023 - A Systematic Review of WebAssembly VS Javascript P.pdf:application/pdf},
}

@inproceedings{de_macedo_webassembly_2022,
	location = {Plovdiv, Bulgaria},
	title = {{WebAssembly} versus {JavaScript}: Energy and Runtime Performance},
	isbn = {978-1-66548-286-8},
	url = {https://ieeexplore.ieee.org/document/9830108/},
	doi = {10.1109/ICT4S55073.2022.00014},
	shorttitle = {{WebAssembly} versus {JavaScript}},
	abstract = {The worldwide Web has dramatically evolved in recent years. Web pages are dynamic, expressed by programs written in common programming languages given rise to sophisticated Web applications. Thus, Web browsers are almost operating systems, having to interpret/compile such programs and execute them. Although {JavaScript} is widely used to express dynamic Web pages, it has several shortcomings and performance inefﬁciencies. To overcome such limitations, major {IT} powerhouses are developing a new portable and size/load efﬁcient language: {WebAssembly}.},
	eventtitle = {2022 International Conference on {ICT} for Sustainability ({ICT}4S)},
	pages = {24--34},
	booktitle = {2022 International Conference on {ICT} for Sustainability ({ICT}4S)},
	publisher = {{IEEE}},
	author = {De Macedo, Joao and Abreu, Rui and Pereira, Rui and Saraiva, Joao},
	urldate = {2024-02-17},
	date = {2022-06},
	langid = {english},
	keywords = {noreview, wasm},
	file = {De Macedo et al. - 2022 - WebAssembly versus JavaScript Energy and Runtime .pdf:files/37/De Macedo et al. - 2022 - WebAssembly versus JavaScript Energy and Runtime .pdf:application/pdf},
}

@online{mohit_common_nodate,
	title = {Common {JavaScript} Issues and its Solutions},
	url = {https://browserstack.wpengine.com/guide/javascript-issues-and-solutions/},
	abstract = {Know all the common {JavaScript} Issues that you may face as a Developer. Also, check out the solutions for these common {JavaScript} issues in this guide},
	titleaddon = {{BrowserStack}},
	author = {Mohit, Joshi},
	urldate = {2024-02-22},
	langid = {american},
	file = {Snapshot:files/78/javascript-issues-and-solutions.html:text/html},
}

@online{peterson_10_nodate,
	title = {The 10 Most Common {JavaScript} Issues Developers Face {\textbar} Toptal®},
	url = {https://www.toptal.com/javascript/10-most-common-javascript-mistakes},
	abstract = {If you need help figuring out why your {JavaScript} isn't working, consult this list of the 10 most common {JavaScript} issues from a skilled engineer.},
	titleaddon = {Toptal Engineering Blog},
	author = {Peterson, Ryan J.},
	urldate = {2024-02-22},
	langid = {english},
	file = {Snapshot:files/79/10-most-common-javascript-mistakes.html:text/html},
}

@online{tejsidda34_what_2022,
	title = {What to understand Callback and Callback hell in {JavaScript} ?},
	url = {https://www.geeksforgeeks.org/what-to-understand-callback-and-callback-hell-in-javascript/},
	abstract = {A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.},
	titleaddon = {{GeeksforGeeks}},
	author = {tejsidda34},
	urldate = {2024-02-22},
	date = {2022-02-14},
	langid = {english},
	note = {Section: {JavaScript}},
	file = {Snapshot:files/80/what-to-understand-callback-and-callback-hell-in-javascript.html:text/html},
}

@software{openai_chatgpt_nodate,
	title = {{ChatGPT} Prompt {JavaScript} Errors},
	url = {chat.openai.com},
	abstract = {Prompt: Can you give me a list of common problems regarding the programming language {JavaScript}?},
	publisher = {{OpenAI}},
	author = {{OpenAI}},
	keywords = {chatgpt, javascript},
	annotation = {Result: 
Certainly! Here are some common problems encountered when working with the programming language {JavaScript}:
Asynchronous programming complexity: Managing asynchronous operations using callbacks, promises, or async/await syntax can lead to callback hell or issues with chaining asynchronous functions.
Type coercion: {JavaScript}'s loose typing system can lead to unexpected behavior due to automatic type conversion, particularly when comparing values using the == operator.
Global scope pollution: Variables declared without the var, let, or const keywords are automatically placed in the global scope, potentially leading to naming conflicts and unintended side effects.
Memory leaks: Improper memory management, such as retaining references to objects that are no longer needed, can result in memory leaks and degrade application performance over time.
Cross-browser compatibility: Differences in {JavaScript} implementations across various web browsers can cause inconsistencies in rendering and behavior, requiring careful testing and polyfills to ensure compatibility.
Security vulnerabilities: Insecure coding practices, such as client-side validation or improper handling of user input, can expose applications to risks such as {XSS} (Cross-Site Scripting) or {CSRF} (Cross-Site Request Forgery) attacks.
Callback hell: Nesting multiple asynchronous callbacks can lead to deeply nested and hard-to-read code, making maintenance and debugging challenging.
Event handling complexities: Managing event listeners and their associated callbacks can become complex, especially in large-scale applications with numerous {DOM} elements and interactions.
Performance bottlenecks: Inefficient algorithms, excessive {DOM} manipulation, or poorly optimized code can lead to performance bottlenecks, resulting in slow responsiveness and degraded user experience.
Lack of strong typing: {JavaScript}'s dynamic typing can make it prone to runtime errors and debugging difficulties, particularly in larger codebases where type safety is crucial.
Addressing these challenges often requires a combination of good programming practices, understanding {JavaScript}'s quirks, leveraging frameworks and libraries, and staying updated on best practices and security considerations.
},
}

@software{openai_chatgpt_nodate-1,
	title = {{ChatGPT} Prompt {JavaScript} General Definition},
	url = {chat.openai.com},
	abstract = {Prompt: Can you give me a technical definition of {JavaScript}. Please make sure to write it in a scientific style for an educated audience},
	publisher = {{OpenAI}},
	author = {{OpenAI}},
	keywords = {chatgpt, javascript},
	annotation = {Result:
{JavaScript} is a high-level, dynamic, interpreted programming language primarily utilized for client-side web development. It employs a prototype-based object-oriented paradigm, featuring first-class functions and asynchronous programming capabilities. {JavaScript} is commonly embedded within {HTML} documents and executed by web browsers to manipulate the Document Object Model ([[{DOM}]]) dynamically, enabling interactive user interfaces and dynamic content generation. Its versatility extends beyond web development, as it can also be employed for server-side scripting, mobile application development, and desktop application development through frameworks like Node.js. {JavaScript}'s syntax is influenced by C and Java, offering a rich ecosystem of libraries, frameworks, and tools for application development. It serves as a fundamental technology underpinning modern web applications, facilitating the creation of dynamic and interactive experiences across various platforms.
},
}

@software{openai_chatgpt_nodate-2,
	title = {{ChatGPT} Prompt {DOM} General Definition},
	url = {chat.openai.com},
	abstract = {Prompt: Can you give me a technical definition of the {HTML} {DOM}. Please make sure to write it in a scientific style for an educated audience},
	publisher = {{OpenAI}},
	author = {{OpenAI}},
	keywords = {chatgpt, dom},
	annotation = {Result:
The Document Object Model ({DOM}) in Hypertext Markup Language ({HTML}) refers to a standardized, platform-independent application programming interface ({API}) utilized for representing and interacting with structured documents. Primarily employed in web development, the {HTML} {DOM} provides a hierarchical representation of documents, enabling programmatic access and manipulation of their content, structure, and style. Characterized by its tree-like structure, the {DOM} organizes elements of an {HTML} document into a logical arrangement, wherein each element is represented as a node possessing distinct properties and relationships with other nodes. This model facilitates dynamic manipulation of web content through scripting languages such as {JavaScript}, allowing for the modification of document elements, attributes, and event handling, thereby facilitating dynamic and responsive web experiences. As a fundamental component of web technologies, the {HTML} {DOM} serves as an intermediary layer between web documents and scripting environments, facilitating seamless integration and manipulation of web content for diverse interactive applications.
},
}

@online{robie_what_nodate,
	title = {What is the Document Object Model?},
	url = {https://www.w3.org/TR/WD-DOM/introduction.html},
	author = {Robie, Jonathan},
	urldate = {2024-02-23},
	file = {What is the Document Object Model?:files/87/introduction.html:text/html},
}

@online{oladele_what_2022,
	title = {What is the {DOM}? The Document Object Model Explained in Plain English},
	url = {https://www.freecodecamp.org/news/what-is-the-dom-explained-in-plain-english/},
	shorttitle = {What is the {DOM}?},
	abstract = {Modern web pages are dynamic. This means we need a suitable and convenient way to modify and manipulate a web document's structure.  This modification in an {HTML} document, for instance, usually takes the form of creating, adding, or removing elements in the document.  In this article, you'll learn},
	titleaddon = {{freeCodeCamp}.org},
	author = {Oladele, Damilola},
	urldate = {2024-02-23},
	date = {2022-06-22},
	langid = {english},
	file = {Snapshot:files/91/what-is-the-dom-explained-in-plain-english.html:text/html},
}

@online{dohr_vanilla_0000,
	title = {Vanilla {JavaScript}, Libraries, And The Quest For Stateful {DOM} Rendering},
	url = {https://www.smashingmagazine.com/2024/02/vanilla-javascript-libraries-quest-stateful-dom-rendering/},
	abstract = {It’s well-established that the web faces wide-ranging usability and performance issues, from user-hostile {UI} patterns and twisted search results to sluggish performance and battery-draining bloat. In this article, Frederik examines one small-but-significant aspect where developers take the reins: Painting pixels on the screen.},
	titleaddon = {Smashing Magazine},
	author = {Dohr, Frederik},
	urldate = {2024-02-23},
	date = {0000},
	langid = {english},
	note = {Section: General},
	file = {Snapshot:files/93/vanilla-javascript-libraries-quest-stateful-dom-rendering.html:text/html},
}

@online{cody_arsenault_20_nodate,
	title = {20 Best Practices for Improving {JavaScript} Performance},
	url = {https://www.keycdn.com/blog/javascript-performance},
	abstract = {Proper {JavaScript} performance is vital for ensuring that your website loads fast. Check out these 20 best practices for improving {JavaScript} performance.},
	titleaddon = {{KeyCDN}},
	author = {Cody Arsenault},
	urldate = {2024-02-23},
	langid = {english},
	file = {Snapshot:files/94/javascript-performance.html:text/html},
}

@online{w3schools_javascript_nodate,
	title = {{JavaScript} Performance},
	url = {https://www.w3schools.com/js/js_performance.asp},
	abstract = {W3Schools offers free online tutorials, references and exercises in all the major languages of the web. Covering popular subjects like {HTML}, {CSS}, {JavaScript}, Python, {SQL}, Java, and many, many more.},
	author = {w3schools},
	urldate = {2024-02-23},
	langid = {american},
	file = {Snapshot:files/95/js_performance.html:text/html},
}

@online{burkart_pros_2023,
	title = {Pros and Cons of the Rust Programming Language},
	url = {https://paulburkart.medium.com/pros-and-cons-of-the-rust-programming-language-50acbb558bec},
	abstract = {Rust is a programming language that was created with a focus on safety, speed, and concurrency. It was first introduced in 2010, and has…},
	titleaddon = {Medium},
	author = {Burkart, Paul},
	urldate = {2024-02-23},
	date = {2023-02-21},
	langid = {english},
}

@online{augsten_was_2018,
	title = {Was ist ein Assembler?},
	url = {https://www.dev-insider.de/was-ist-ein-assembler-a-756636/},
	abstract = {Assembler sind Programme, die Assemblercode in Maschinensprache, sprich Binärcode übersetzen. Sie arbeiten sehr nahe an der Prozessorarchitektur und gelten daher als besonders effizient und sparsam.},
	titleaddon = {Dev-Insider},
	author = {Augsten, Stephan},
	urldate = {2024-02-23},
	date = {2018-09-25},
	langid = {german},
	file = {Snapshot:files/102/was-ist-ein-assembler-a-756636.html:text/html},
}

@online{laverny_using_2021,
	title = {Using Git and Github for {LaTeX} writing},
	url = {https://actuarial.science/post/using-git-and-github-for-latex-writting/},
	abstract = {The problematic As an academic, I spend my life writing papers. Since these papers are mostly about math or some applications of math, I am an extensive user of latex.},
	titleaddon = {Oskar Laverny},
	author = {Laverny, Oskar},
	urldate = {2024-02-24},
	date = {2021-07-23},
	langid = {english},
	file = {Snapshot:files/105/using-git-and-github-for-latex-writting.html:text/html},
}

@online{ranganath_git_2017,
	title = {A Git workflow for writing papers in Latex},
	url = {https://rvprasad.medium.com/a-git-workflow-for-writing-papers-in-latex-4cfb31be4b06},
	abstract = {Having used git to writing papers in collaboration with multiple authors, here’s the recipe that works well for me.},
	titleaddon = {Medium},
	author = {Ranganath, Venkatesh-Prasad},
	urldate = {2024-02-24},
	date = {2017-10-14},
	langid = {english},
	file = {Snapshot:files/107/a-git-workflow-for-writing-papers-in-latex-4cfb31be4b06.html:text/html},
}

@online{wikibooks_latex_nodate,
	title = {{LaTeX}/ Einleitung – Wikibooks, Sammlung freier Lehr-, Sach- und Fachbücher},
	url = {https://de.wikibooks.org/wiki/LaTeX/_Einleitung},
	author = {wikibooks},
	urldate = {2024-02-24},
	langid = {german},
	file = {Snapshot:files/109/_Einleitung.html:text/html},
}

@online{ruber_github_nodate,
	title = {{GitHub} Repository {ITInfraPaper}},
	url = {https://github.com/nilsrueber/ITInfraPaper},
	abstract = {A {LaTeX} template for term paper, bachelor or master thesis for "{FOM} University of Applied Sciences" - Manage access · nilsrueber/{ITInfraPaper}},
	titleaddon = {{GitHub}},
	author = {Rüber, Nils},
	urldate = {2024-02-24},
	langid = {english},
	file = {Snapshot:files/111/ITInfraPaper.html:text/html},
}

@online{fuchs_github_nodate,
	title = {{GitHub} Repository {WASMvsJS}},
	url = {https://github.com/Foxx-l/WASMvsJS},
	author = {Fuchs, Mads},
	urldate = {2024-02-24},
	file = {Foxx-l/WASMvsJS:files/113/WASMvsJS.html:text/html},
}

@online{reyes_webassembly_2018,
	title = {{WebAssembly}: Solving Performance Problems on the Web — {SitePoint}},
	url = {https://www.sitepoint.com/webassembly-solving-performance-problems/},
	shorttitle = {{WebAssembly}},
	abstract = {Camilo Reyes introduces {WebAssembly}, explaining what it is and how you can add it to your arsenal to solve performance bottlenecks encountered on the Web.},
	author = {Reyes, Camilo},
	urldate = {2024-02-25},
	date = {2018-06-05},
	langid = {english},
	file = {Snapshot:files/116/webassembly-solving-performance-problems.html:text/html},
}

@online{bevans_guide_2019,
	title = {Guide to Experimental Design {\textbar} Overview, Steps, \& Examples},
	url = {https://www.scribbr.com/methodology/experimental-design/},
	abstract = {Experiments are used to study causal relationships. You manipulate one or more independent variables and measure their effect on one or more dependent},
	titleaddon = {Scribbr},
	author = {Bevans, Rebecca},
	urldate = {2024-02-26},
	date = {2019-12-03},
	langid = {american},
	file = {Snapshot:files/125/experimental-design.html:text/html},
}

@article{ct_heft_webassembly_2019,
	title = {{WebAssembly} ist Standard},
	issn = {0724-8679},
	url = {https://www.wiso-net.de/document/CT__1577550141725304},
	pages = {49--49},
	number = {1},
	journaltitle = {c't},
	author = {c't Heft},
	urldate = {2024-02-26},
	date = {2019-12-21},
	file = {Snapshot:files/127/hitlist.html:text/html},
}

@book{adams_research_2014,
	location = {New Delhi},
	edition = {Second edition},
	title = {Research Methods for Business and Social Science Students},
	isbn = {978-81-321-1366-9},
	abstract = {Research Methods for Business and Social Science Students aims to present a clear discussion of the research methods employed in various disciplines related to our daily life problems. The theoretical basis of research methods is explained clearly and succinctly. Collecting data is a key part of the book and this includes both qualitative and quantitative methods of data collection, along with the advantages and disadvantages of each method. The book also describes in clear terms how students can analyse data, interpret results and link these to the literature review and hence their own contribution. It sets out a range of fundamental ideas in research methods, such as deductivism and inductivism, and explains why methodology is not the same as method. In this second edition every chapter has been re-written to be more readable and also to include more examples. The authors have also added a real student research proposal and a multiple-choice test with answers for the readers to test their own understanding of the ideas in the book. The book has been designed to illustrate research tools in a clear and accessible manner through chapters on such topics as formulating research, research design, data analysis and writing up the research results.},
	publisher = {Sage Publications Pvt. Ltd},
	author = {Adams, John and Khan, Hafiz T. A. and Raeside, Robert},
	date = {2014-01-01},
	keywords = {{BUSINESS} \& {ECONOMICS} / Management, Social sciences--Methodology, Social sciences--Research},
}

@online{genau_experiment_2018,
	title = {Experiment als Methode für die Abschlussarbeit},
	url = {https://www.scribbr.de/methodik/experiment/},
	abstract = {Das Experiment ist eine der Methoden der Datenerhebung, die du für deine Abschlussarbeit nutzen kannst.},
	titleaddon = {Scribbr},
	author = {Genau, Lea},
	urldate = {2024-02-26},
	date = {2018-10-03},
	langid = {german},
	file = {Snapshot:files/131/experiment.html:text/html},
}

@inreference{wikipedia_sieve_2024,
	title = {Sieve of Eratosthenes},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://en.wikipedia.org/w/index.php?title=Sieve_of_Eratosthenes&oldid=1209469937#cite_note-peng1985fall-14},
	abstract = {In mathematics, the sieve of Eratosthenes is an ancient algorithm for finding all prime numbers up to any given limit.
It does so by iteratively marking as composite (i.e., not prime) the multiples of each prime, starting with the first prime number, 2. The multiples of a given prime are generated as a sequence of numbers starting from that prime, with constant difference between them that is equal to that prime. This is the sieve's key distinction from using trial division to sequentially test each candidate number for divisibility by each prime. Once all the multiples of each discovered prime have been marked as composites, the remaining unmarked numbers are primes.
The earliest known reference to the sieve (Ancient Greek: κόσκινον Ἐρατοσθένους, kóskinon Eratosthénous) is in Nicomachus of Gerasa's Introduction to Arithmetic, an early 2nd cent. {CE} book which attributes it to Eratosthenes of Cyrene, a 3rd cent. {BCE} Greek mathematician, though describing the sieving by odd numbers instead of by primes.One of a number of prime number sieves, it is one of the most efficient ways to find all of the smaller primes. It may be used to find primes in arithmetic progressions.},
	booktitle = {Wikipedia},
	author = {Wikipedia},
	urldate = {2024-02-26},
	date = {2024-02-22},
	langid = {english},
	note = {Page Version {ID}: 1209469937},
	file = {Snapshot:files/133/Sieve_of_Eratosthenes.html:text/html},
}

@online{niehoff_webassembly_nodate,
	title = {{WebAssembly} – Mehr als nur ein Web-Standard},
	url = {https://www.codecentric.de/wissens-hub/blog/webassembly-mehr-als-nur-ein-web-standard},
	abstract = {Seit 2017 unterstützen moderne Browser bereits {WebAssembly} (Wasm), seitdem ist der Hype mal größer, mal kleiner. Aber was ist {WebAssembly} überhaupt und warum wurde es geschaffen?},
	titleaddon = {codecentric},
	author = {Niehoff, Matthias},
	urldate = {2024-02-27},
	file = {Snapshot:files/140/webassembly-mehr-als-nur-ein-web-standard.html:text/html},
}

@online{zeroshope_was_2020,
	title = {Was ist {WebAssembly}?},
	url = {https://www.dev-insider.de/was-ist-webassembly-a-4243591d831cc5a12d425ede224f5e5b/},
	abstract = {(Bild: {WebAssembly}.org) {WebAssembly} ist als Ergänzung zu Javascript im Webbrowser gedacht. Es handelt um einen Bytecode, der dabei helfen soll, die Geschwindigkeit von Webanwendungen zu erhöhen. Allerdings hat das System noch gewisse Schwachstellen.},
	titleaddon = {Dev-Insider},
	author = {zeroshope},
	urldate = {2024-02-27},
	date = {2020-03-20},
	langid = {german},
	file = {Snapshot:files/144/was-ist-webassembly-a-4243591d831cc5a12d425ede224f5e5b.html:text/html},
}

@online{bigelow_was_nodate,
	title = {Was ist {WebAssembly} (Wasm)? - Definition von Computer Weekly},
	url = {https://www.computerweekly.com/de/definition/WebAssembly-Wasm},
	shorttitle = {Was ist {WebAssembly} (Wasm)?},
	abstract = {{WebAssembly} ist ein binäres Befehlsformat zum Kompilieren und Ausführen von Code in einem Webbrowser. {WebAssembly} unterstützt alle gängigen Programmiersprachen.},
	titleaddon = {{ComputerWeekly}.de},
	author = {Bigelow, Stephen J.},
	urldate = {2024-02-27},
	langid = {german},
	file = {Snapshot:files/146/WebAssembly-Wasm.html:text/html},
}

@online{tovilo_intersim_nodate,
	title = {Intersim {AG} - {JavaScript} vs {WebAssembly}},
	url = {https://www.intersim.ch/blog/artikel/307/javascript-vs-webassembly},
	author = {Tovilo, Ilija},
	urldate = {2024-02-28},
	file = {Intersim AG - JavaScript vs WebAssembly:files/152/javascript-vs-webassembly.html:text/html},
}

@online{mukul_downsides_nodate,
	title = {Downsides of Rust Programming Language},
	url = {https://www.tutorialspoint.com/downsides-of-rust-programming-language},
	abstract = {Downsides of Rust Programming Language - Every programming language has some downsides attached to it, it’s not all roses when it comes to Rust as well. Some of the noticeable downsides of Rust programming language are highlighted here −Compile {TimeYes}, compile time. Rust is fast, no doubt. But when it comes to compiling code, then it�},
	author = {Mukul, Latiyan},
	urldate = {2024-02-28},
	langid = {english},
	file = {Snapshot:files/153/downsides-of-rust-programming-language.html:text/html},
}

@online{thompson_how_nodate,
	title = {How Rust went from a side project to the world’s most-loved programming language},
	url = {https://www.technologyreview.com/2023/02/14/1067869/rust-worlds-fastest-growing-programming-language/},
	abstract = {For decades, coders wrote critical systems in C and C++. Now they turn to Rust.},
	titleaddon = {{MIT} Technology Review},
	author = {Thompson, Clive},
	urldate = {2024-02-28},
	langid = {english},
	file = {Snapshot:files/154/rust-worlds-fastest-growing-programming-language.html:text/html},
}

@online{stackoverflow_stack_nodate,
	title = {Stack Overflow Developer Survey 2023},
	url = {https://survey.stackoverflow.co/2023/?utm_source=social-share&utm_medium=social&utm_campaign=dev-survey-2023},
	abstract = {In May 2023 over 90,000 developers responded to our annual survey about how they learn and level up, which tools they're using, and which ones they want.},
	titleaddon = {Stack Overflow},
	author = {stackoverflow},
	urldate = {2024-02-28},
	langid = {english},
	file = {Snapshot:files/155/2023.html:text/html},
}

@online{xovi_was_2019,
	title = {Was ist ein Compiler? {\textbar} {XOVI}},
	url = {https://www.xovi.de/was-ist-ein-compiler/},
	shorttitle = {Was ist ein Compiler?},
	abstract = {Erfahre alles über Compiler: Definition, Hintergründe, Funktion, Relevanz für {SEO}. Kurz \& klar erklärt. Jetzt lesen.},
	author = {Xovi},
	urldate = {2024-02-28},
	date = {2019-12-18},
	langid = {german},
	file = {Snapshot:files/157/was-ist-ein-compiler.html:text/html},
}

@online{xovi_was_2019-1,
	title = {Was ist ein Interpreter? {\textbar} {XOVI}},
	url = {https://www.xovi.de/was-ist-ein-interpreter/},
	shorttitle = {Was ist ein Interpreter?},
	abstract = {Erfahre alles über Interpreter: Definition, Funktion, Interpreter vs. Compiler. Kurz \& klar erklärt. Jetzt lesen.},
	author = {Xovi},
	urldate = {2024-02-28},
	date = {2019-12-18},
	langid = {german},
	file = {Snapshot:files/159/was-ist-ein-interpreter.html:text/html},
}

@online{mozilla_webassembly_2024,
	title = {{WebAssembly} Concepts - {WebAssembly} {\textbar} {MDN}},
	url = {https://developer.mozilla.org/en-US/docs/WebAssembly/Concepts},
	abstract = {This article has given you an explanation of what {WebAssembly} is, why it is so useful, how it fits into the web, and how you can make use of it.},
	author = {Mozilla},
	urldate = {2024-02-28},
	date = {2024-01-18},
	langid = {american},
	file = {Snapshot:files/161/Concepts.html:text/html},
}
